/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}:root{--color-bg:#edf5fc;--color-headerbg:linear-gradient(300deg,#d7e8f9,#d7f9f9);--color-card__bg:250.4864,252.4208,254.3136;--color-shadow:rgba(3,10,18,0.7);--color-text:#030a12;--color-text_disabled:#010a14;--color-link:#2683de;--color-primary:#2683de;--color-accent:#26dedd;--bg-header:linear-gradient(180deg,hsla(0,0%,78.4%,0.25),hsla(0,0%,78.4%,0.25)),linear-gradient(180deg,hsla(0,0%,100%,0.5),rgba(0,0,0,0.5)),url(/img/icecold_5120x2880.png) center/cover no-repeat;--bg-blog-header:linear-gradient(300deg,#d7e8f9,#d7f9f9) center/cover}:root,[data-theme=dark]{--color-inversebg:#071c31;--color-inversetext:#fff}[data-theme=dark]{--color-bg:#071c31;--color-headerbg:linear-gradient(300deg,#1c69b5,#1cb5b5);--color-card__bg:9.4116,35.9352,61.8884;--color-shadow:hsla(0,0%,100%,0.4);--color-text:#fff;--color-text_disabled:#fff;--color-link:#529ce5;--color-primary:#529ce5;--color-accent:#52e5e4;--bg-header:linear-gradient(180deg,rgba(50,50,50,0.25),rgba(50,50,50,0.25)),linear-gradient(180deg,hsla(0,0%,100%,0.5),rgba(0,0,0,0.5)),url(/img/icecold_5120x2880.png) center/cover no-repeat;--bg-blog-header:linear-gradient(300deg,#1c69b5,#1cb5b5) center/cover}#page{color:var(--color-text)}html{font:normal 125%/1.4 Source Sans Pro}@media (max-width:850px){html{font:normal 100%/1.4 Source Sans Pro}}h1{font-style:normal;font-weight:300;font-size:5.3125rem;line-height:7rem;letter-spacing:-1.5px;margin:.3rem 0}@media (max-width:850px){h1{line-height:5rem}}h2{font-size:3.75rem;line-height:4.875rem;letter-spacing:-.5px}h2,h3{font-style:normal;font-weight:300;margin:.2rem 0}h3{font-size:3rem;line-height:3.875rem}h4{font-style:normal;font-weight:300;font-size:2.125rem;line-height:2.75rem;letter-spacing:.25px;margin:0}h5{font-size:1.5rem;line-height:1.9375rem}h5,h6{font-style:normal;font-weight:500;margin:0}h6{font-size:1.25rem;line-height:1.625rem;letter-spacing:.15px}p{font-style:normal;font-weight:400;font-size:.875rem;line-height:1.25rem;letter-spacing:.25px;margin:.5rem .15rem}@media (max-width:850px){p{font-size:1rem}}picture{line-height:0}html{box-sizing:border-box;scroll-behavior:smooth}body{height:auto;width:100%;min-height:100vh;position:absolute}button{background:none;border:none;padding:0;cursor:pointer}button:focus{outline:0}*,:after,:before{box-sizing:inherit}a{color:var(--color-link)}#page{background-color:var(--color-bg);min-height:100vh;max-width:100vw;overflow-x:hidden;width:100%;position:absolute;z-index:0;transition:color,background-color .2s ease-in}.flex__col{display:flex;flex-direction:column}.flex__row{display:flex;flex-direction:row}.flex__col-reverse{display:flex;flex-direction:column-reverse}.flex__row-reverse{display:flex;flex-direction:row-reverse}.flex__grow{flex:1 1 0}.header__navigation{display:flex;justify-content:space-between;padding:1rem .5rem;align-items:center;position:fixed;width:100%}.header__navigation__icon{padding:0 .5rem}.header__navigation__icon_logo{max-width:2rem;max-height:2rem}.header__navigation div{display:flex;justify-content:space-between;align-items:center}.header__navigation div a{display:flex}.theme__checkbox{visibility:hidden}.theme__checkbox+.theme__label:before{content:"nights_stay"}.theme__checkbox:checked+.theme__label:before{content:"brightness_high"}.theme__label{cursor:pointer}.button{text-decoration:none;padding:.5rem .75rem;margin:.25rem;border-radius:5px;font-style:normal;font-weight:400;font-size:1rem;line-height:1rem;text-align:center;letter-spacing:.75px;text-transform:uppercase;transition:color,background-color .2s ease-in}.button__filled,.button__filled__accent,.button__filled__primary{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2);color:#fff}.button__filled__primary{background-color:var(--color-primary)}.button__filled__accent{background-color:var(--color-accent)}.button__transparent__primary{color:var(--color-primary)}.button__transparent__accent{color:var(--color-accent)}.card{background-color:RGB(var(--color-card__bg));box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12),0 1px 5px 0 rgba(0,0,0,.2);border-radius:5px;margin:.75rem .5rem;padding:1rem;flex-basis:100%;justify-content:space-between;transition:color,background-color .2s ease-in}.card,.card__below{display:flex;flex-direction:column}.card__buttons{display:flex;flex-direction:row}.card__content{margin:.5rem}.home__header{background:var(--bg-header);padding:3rem 3vw 5rem;display:flex;box-shadow:0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12),0 1px 3px 0 rgba(0,0,0,.2);z-index:-1;position:relative;justify-content:space-between}@media (max-width:850px){.home__header{flex-direction:column;padding:3rem 3vw 2rem}}.home__header__buttons{margin-top:2rem;overflow:visible}.home__header__left{color:#fff}@media (max-width:850px){.home__header__left{padding-bottom:2rem}}.home__header__right{display:flex;align-items:center}.home__header__right .card{height:-webkit-min-content;height:-moz-min-content;height:min-content;background-color:RGBA(var(--color-card__bg),.5);-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.home__content{margin-top:1rem;padding-left:4vw;padding-right:4vw;z-index:1}.home__subheading{margin:1.5rem .75rem 1rem;text-align:left}.home__portfolio__container{display:grid;grid-column-gap:1rem;grid-row-gap:1rem;padding:.5rem;grid-template-columns:repeat(auto-fit,minmax(21rem,1fr))}.home__portfolio__container .card{margin:0}.blog__header{background:var(--bg-blog-header);padding:3rem 3vw 6rem;box-shadow:0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12),0 1px 3px 0 rgba(0,0,0,.2);z-index:-1;position:relative}.blog__content{margin-top:-4rem;padding-left:4vw;padding-right:4vw;z-index:1;display:flex;flex-direction:column}.blog__content .flex__row:first-child{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2);border-radius:16px;display:flex;flex-grow:0;flex-shrink:0;flex-basis:70%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
